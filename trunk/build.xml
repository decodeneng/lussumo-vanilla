<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     3 Jun 2008 16:12:05

     Vanilla Forum
     Build the vanilla package

     requires:
		- JDK 1.5+
		- Ant 1.7

     Damien Lebrun
     ====================================================================== -->
<project name="Vanilla Forum" default="dist">
    <description>
            Build the vanilla package
    </description>
	
	<!-- Properties -->
	<loadproperties srcfile="build.properties"/>
	
	<!-- Add additional ant types and task -->
	<path id="project.classpath">
		<fileset dir="${tools.antlib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="project.classpath"/>
	<typedef resource="com/yahoo/platform/yui/compressor/ant/antlib.xml" classpathref="project.classpath"/>
	
	<macrodef name="buildExtension">
		<attribute name="name"/>
		<attribute name="target" default="dist"/>
		<sequential>
			<echo>Building @{name}...</echo>
	    	<ant inheritall="false" antfile="${src.extension.dir}/@{name}/build.xml" target="@{target}">
	    		<property name="build.dir" location="${build.extension.dir}"/>
	    		<property name="dist.dir" location="${dist.dir}"/>
	    		<property name="package.name" value="@{name}"/>
	    		<property name="task.compressor.defined" value="true"/>
	    	</ant>
		</sequential>
	</macrodef>
	
	<!-- Update default exclude patterns -->
	<defaultexcludes add="**/.git"/>
	<defaultexcludes add="**/.git/**"/>
	<defaultexcludes add="**/.hg"/>
	<defaultexcludes add="**/.hg/**"/>
	<defaultexcludes add="**/thumbs.db"/>
	<defaultexcludes add="**/__MACOSX"/>
	<defaultexcludes add="**/.DS_Store"/>
	<defaultexcludes add="**/.localized"/>

	
    <!-- =================================
          target: build
         ================================= -->
    <target name="build" depends="prepare" description="--> Build the vanilla package">

    	
    	<!-- File patterns -->
    	
    	<patternset id="src.exclude.patterns">
    		<exclude name="conf/*.php"/>
    		<exclude name="extensions/**"/>
    	</patternset>
    	
    	<patternset id="src.tofilter.patterns">
    		<include name="**/*.php"/>
    		<include name="**/*.html"/>
    		<include name="**/*.htm"/>
    		<include name="**/*.txt"/>
    		<include name="**/*.js"/>
    		<include name="**/*.css"/>
    	</patternset>
    	
    	<patternset id="src.binary.patterns">
    		<include name="**/**"/>
    		<exclude name="**/*.php"/>
    		<exclude name="**/*.html"/>
    		<exclude name="**/*.htm"/>
    		<exclude name="**/*.txt"/>
    		<exclude name="**/*.js"/>
    		<exclude name="**/*.css"/>
    	</patternset>
 
    	
    	<!-- binary file could be corrupted if filtered, so we copy them separatly -->
		<echo>Copying binary files...</echo>
		
    	<copy todir="${build.app.dir}" verbose="true" encoding="UTF-8" outputencoding="UTF-8">
        	<fileset dir="${src.dir}" id="src.binary.fileset" >
        		<patternset refid="src.binary.patterns"/>
        		<patternset refid="src.exclude.patterns"/>
        	</fileset>
		</copy>

    	
    	<!-- Filter php and html files for the version number -->
		<echo>Copying text files, with token filtering...</echo>
    	<echo>Tokens: @@VANILLA-VERSION@@, @@FRAMEWORK-VERSION@@ and @@PEOPLE-VERSION@@</echo>
		
    	<copy todir="${build.app.dir}" verbose="true"  encoding="UTF-8" outputencoding="UTF-8">
    		<fileset dir="${src.dir}" id="src.tofilter.fileset">
	    		<patternset refid="src.tofilter.patterns"/>
	    		<patternset refid="src.exclude.patterns"/>
	    	</fileset>
			<filterset begintoken="@@" endtoken="@@">
				<filter token="VANILLA-VERSION" value="${app.version}"/>
				<filter token="FRAMEWORK-VERSION" value="${app.version}"/>
				<filter token="PEOPLE-VERSION" value="${app.version}"/>
			</filterset>
		</copy>

    	
		<!--	Compress js files with Julien Lecomte's YUI Compressor.
				(copy the source file to js/src/) -->
		<echo message="Compressing js files..."/>
    	
    	<fileset dir="${build.js.dir}" id="build.js.fileset">
    		<include name="**/*.js"/>
    		<exclude name="src/**"/>
    		<patternset refid="src.exclude.patterns"/>
    	</fileset>

    	<mkdir dir="${build.js.dir}src"/>
		<copy todir="${build.js.dir}src">
			<fileset refid="build.js.fileset"/>
		</copy>
    	
    	<jscompressor>
    		<fileset refid="build.js.fileset"/>
    	</jscompressor>

    	

		<!--	Compress css files with Julien Lecomte's YUI Compressor
				(copy the original files to themes/vanilla/styles/default/src/) -->
		<echo message="Compressing css files..."/>
    	
    	<fileset dir="${build.css.dir}" id="build.css.fileset">
    		<include name="**/*.css"/>
    		<exclude name="src/**"/>
    		<patternset refid="src.exclude.patterns"/>
    	</fileset>

		<mkdir dir="${build.css.dir}src"/>
		<copy todir="${build.css.dir}src">
			<fileset refid="build.css.fileset"/>
		</copy>
    	
    	<csscompressor>
    		<fileset refid="build.css.fileset"/>
    	</csscompressor>
    	
    	<!-- Build extensions -->
		<buildExtension name="HtmlFormatter"/>
    	<buildExtension name="Minify"/>
    	<buildExtension name="Notifi"/>
    	<buildExtension name="Whisperfi"/>
		<buildExtension name="RoleHistory"/>
		<buildExtension name="YellowFade"/>
		<buildExtension name="TextMode"/>
		<buildExtension name="PrivateAccounts"/>
		<buildExtension name="PreviewPost"/>
		<buildExtension name="PanelLists"/>
		<buildExtension name="NewApplicants"/>
		<buildExtension name="Legends"/>
		<buildExtension name="IpHistory"/>
		<buildExtension name="HideSuccess"/>

    	
    </target>
	
	<!-- ================================= 
          target: dist              
         ================================= -->
    <target name="dist" depends="build" description="description">
    	<!-- Create the zip archive -->
    	<echo>Create archive....</echo>
    	
    	<zip basedir="${build.dir}"
    		destfile="${dist.dir}${dist.name}.zip"
    		excludes="**/js/test/**"/>
    	
    	<zip basedir="${build.dir}"
    		destfile="${dist.dir}${dist.core.name}.zip"
    		excludes="**/js/test/**,**/extensions/?*/**"/>
    		
    </target>


	<!-- =================================
          target: update
         ================================= -->
    <target name="update" description="--> Update the working copy">
    	<echo>Updating working copy...</echo>
    	<svn>
    		<update dir="./"/>
    	</svn>
    </target>


    <!-- - - - - - - - - - - - - - - - - -
          target: clean
         - - - - - - - - - - - - - - - - - -->
    <target name="clean">
    	<echo>Deleting content of ${build.dir} and ${dist.dir}...</echo>
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}" includes="**/*"/>
			<fileset dir="${dist.dir}" includes="**/*"/>
		</delete>
    </target>

	<!-- - - - - - - - - - - - - - - - - -
          target: getAppDetails
         - - - - - - - - - - - - - - - - - -->
    <target name="getAppDetails">
		<echo>Getting application names and versions...</echo>
		
    	<loadproperties srcfile="${src.dir}appg/version.php">
			<filterchain>
				<containsregex pattern="define.*'(.+)_(.+)'.*'([-\w\.]+)'.*" replace="\1.\2 = \3"/>
			</filterchain>
		</loadproperties>
    	<property name="app.version"		value="${APPLICATION.VERSION}"/>
    	
		<loadproperties srcfile="${src.dir}appg/version.php">
			<filterchain>
				<containsregex pattern="^.*Previous_(\w+)_version:\s*([-\w\.]+)\s*$" replace="\1.old_version = \2"/>
			</filterchain>
		</loadproperties>
    	<property name="app.old_version"	value="${vanilla.old_version}"/>
    	
    	<echo>Vanilla version ${app.version} - last version: ${app.old_version}</echo>
    </target>

	<!-- - - - - - - - - - - - - - - - - -
          target: prepare
         - - - - - - - - - - - - - - - - - -->
    <target name="prepare" depends="clean,getAppDetails">
    	<property name="dist.name" value="${app.name}-${app.version}"/>
    	<property name="dist.core.name" value="${app.name}-core-${app.version}"/>
    	
    	<property name="build.app.dir" value="${build.dir}${dist.name}/"/>
    	<property name="build.extension.dir" value="${build.dir}${dist.name}/extensions/"/>
    	<property name="build.js.dir" value="${build.app.dir}${js.dir}"/>
    	<property name="build.css.dir" value="${build.app.dir}${css.dir}"/>

		<mkdir dir="${build.app.dir}"/>
    </target>


</project>
