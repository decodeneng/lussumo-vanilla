<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Dec 9, 2009 2:24:00 AM                                                        

     Vanilla release build    
     
     Build vanilla archive,
     Build a patch archive,
     tag applications,
     and extract list of changed files from svn diff. 
                   
     requires:
		- JDK 1.5+
		- Ant 1.7
                   
     Damien Lebrun                                                                
     ====================================================================== -->
<project name="Vanilla release build" default="release.build">
	<description>
            Build vanilla,tag applications, extract list of changed files from 
    </description>

	<import file="build.xml"/>
	<loadproperties srcfile="release-build.properties"/>
	<loadproperties srcfile="svn-credential.properties"/>

	<!-- ================================= 
          target: release.build              
         ================================= -->
	<target name="release.build" depends="release.prepare, dist, getChanges">

		<!-- build changed-only-package -->
		<copy todir="${build.upgrade.dir}" verbose="true">
			<fileset dir="${build.app.dir}" includesfile="${all.changedFiles}"/>
		</copy>

		<!-- include all src files, changed or not -->
		<copy todir="${build.upgrade.js.dir}" verbose="true">
			<fileset dir="${build.js.dir}">
				<include name="src/*.js"/>
			</fileset>
		</copy>
		<copy todir="${build.upgrade.css.dir}" verbose="true">
			<fileset dir="${build.css.dir}">
				<include name="src/*.css"/>
			</fileset>
		</copy>

	</target>

	<!-- ================================= 
          target: release             
         ================================= -->
	<target name="release" depends="release.build, tag" description="Tag and upload new version">
		<echo>Create update archive....</echo>
		<zip basedir="${build.dir}"
    		destfile="${dist.dir}${dist.upgrade.name}.zip"
    		includes="${dist.upgrade.name}/**" excludes="**/js/test/**"/>

		<echo>Uploading packages to google code...</echo>
		<gcupload username="${svn.user}" password="${svn.password}"
    		projectname="lussumo-vanilla"
    		filename="${dist.dir}${dist.name}.zip"
    		targetfilename="${app.name}-${app.version}.zip"
    		summary="Vanilla ${app.version}" labels="Featured, Type-Archive, OpSys-All" />
	</target>


	<!-- ================================= 
          target: update              
         ================================= -->
	<target name="update" description="Update the working copy">
		<svn username="${svn.user}" password="${svn.password}">
			<update dir="${svn.wc}"/>
		</svn>
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: tag                      
         - - - - - - - - - - - - - - - - - -->
	<target name="tag" depends="release.prepare">
		<echo level="info" message="${line.separator}Tag Vanilla ${app.version}."/>
		<svn username="${svn.user}" password="${svn.password}">
			<copy srcUrl="${svn.app.trunk}"
				destUrl="${svn.app.newTag}"
				message="Tag version ${app.version}"/>
		</svn>
	</target>


	<!-- - - - - - - - - - - - - - - - - - 
          target: getChanges                      
         - - - - - - - - - - - - - - - - - -->
	<target name="getChanges" depends="release.prepare">
		<!-- Get Diff... -->

		<echo level="info">
			Get diff between ${svn.app.trunk}${svn.app.src} 
			and ${svn.app.tags}Vanilla-${app.old_version}/${svn.app.src}...
		</echo>
		<svn>
			<diff newurl="${svn.read.app.trunk}${svn.app.src}"
				oldurl="${svn.read.app.tags}Vanilla-${app.old_version}/${svn.app.src}"
				outfile="${app.diff}"/>
		</svn>

		<echo level="info" message="Get list of changed files..." />
		<copy file="${app.diff}" tofile="${app.changedFiles}" overwrite="true">
			<filterchain>
				<containsregex pattern="^Index: (.*)$" replace="\1"/>
			</filterchain>
		</copy>

	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: prepare                      
         - - - - - - - - - - - - - - - - - -->
	<target name="release.prepare" depends="prepare">
		<property name="svn.app.newTag" 	value="${svn.app.tags}Vanilla-${app.version}"/>
		<property name="dist.upgrade.name" value="${app.name}-upgrade-${app.old_version}-to-${app.version}"/>
		<property name="build.upgrade.dir" value="${build.dir}${dist.upgrade.name}/"/>
		<property name="build.upgrade.js.dir" value="${build.upgrade.dir}${js.dir}"/>
		<property name="build.upgrade.css.dir" value="${build.upgrade.dir}${css.dir}"/>

		<mkdir dir="${build.diff.dir}"/>
		<mkdir dir="${build.upgrade.dir}"/>
	</target>
</project>
